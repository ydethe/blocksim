
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/plot_prn_processing.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_plot_prn_processing.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_plot_prn_processing.py:


GPS PRN proccessing
===================

.. GENERATED FROM PYTHON SOURCE LINES 8-10

Creation of the signal
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 10-14

.. code-block:: default


    from blocksim.dsp.DSPSignal import DSPSignal
    from blocksim.dsp import createGoldSequence








.. GENERATED FROM PYTHON SOURCE LINES 15-16

Reference Gold sequence. The argument sv=[2, 6] is the

.. GENERATED FROM PYTHON SOURCE LINES 16-19

.. code-block:: default


    y1 = createGoldSequence(name="s1", sv=[2, 6], repeat=1, chip_rate=1.023e6)








.. GENERATED FROM PYTHON SOURCE LINES 20-21

Noisy received signal

.. GENERATED FROM PYTHON SOURCE LINES 21-25

.. code-block:: default


    y = createGoldSequence(name="s1", sv=[2, 6], repeat=20, chip_rate=1.023e6)
    y = y.applyGaussianNoise(pwr=200)








.. GENERATED FROM PYTHON SOURCE LINES 26-28

Processing
----------

.. GENERATED FROM PYTHON SOURCE LINES 30-31

Correlation

.. GENERATED FROM PYTHON SOURCE LINES 31-34

.. code-block:: default


    z = y.correlate(y1)








.. GENERATED FROM PYTHON SOURCE LINES 35-36

Integration

.. GENERATED FROM PYTHON SOURCE LINES 36-39

.. code-block:: default


    zi = z.integrate(period=1e-3, offset=511 / (1.023e6))








.. GENERATED FROM PYTHON SOURCE LINES 40-42

Plotting
--------

.. GENERATED FROM PYTHON SOURCE LINES 42-64

.. code-block:: default


    from matplotlib import pyplot as plt

    from blocksim.graphics import plotDSPLine

    fig = plt.figure()
    axe = fig.add_subplot(311)
    axe.grid(True)
    plotDSPLine(y, axe)
    axe.set_ylabel("Brut")

    axe = fig.add_subplot(312)
    axe.grid(True)
    plotDSPLine(z, axe)
    axe.set_ylabel("Corrélation")

    axe = fig.add_subplot(313)
    axe.grid(True)
    plotDSPLine(zi, axe, find_peaks=1)
    axe.set_ylabel("Intégration")

    plt.show()



.. image-sg:: /examples/images/sphx_glr_plot_prn_processing_001.png
   :alt: plot prn processing
   :srcset: /examples/images/sphx_glr_plot_prn_processing_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.325 seconds)


.. _sphx_glr_download_examples_plot_prn_processing.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_prn_processing.py <plot_prn_processing.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_prn_processing.ipynb <plot_prn_processing.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
