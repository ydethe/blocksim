image: ydethe/blocksim
# image: ubuntu:bionic

variables:
  TWINE_USERNAME: "__token__"
  TWINE_PASSWORD: "$PYPI_TOKEN"

stages:
  - test
  - deploy
  - release

test:
  stage: test
  script:
    - python -m pytest --mpl --mpl-generate-summary=html --mpl-baseline-path=tests/baseline --mpl-results-path=results --cov blocksim tests --doctest-modules blocksim
    - python setup.py doc
    - mv docs/_build/html htmldoc
    - codecov
    - coverage html
    - python setup.py sdist
    - pip3 wheel --no-index --no-deps --wheel-dir dist dist/*.tar.gz
  artifacts:
    when: always
    paths:
      - results
      - htmlcov
      - htmldoc
      - dist

publish_rtd:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/
      when: always
  script:
    - 'curl --insecure -d "" -X POST -H "Authorization: Token $RTD_TOKEN" https://readthedocs.org/api/v3/projects/blocksim/versions/latest/builds/'
    - 'curl --insecure -X PATCH -H "Authorization: Token $RTD_TOKEN" -H "Content-Type: application/json" -d "{\"active\": true,\"hidden\": false}" https://readthedocs.org/api/v3/projects/blocksim/versions/$CI_COMMIT_TAG'

publish_pypi:
  stage: deploy
  dependencies:
  - test
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/
      when: always
  script:
    - twine upload dist/*

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  variables:
    VERSION: $(echo $CI_COMMIT_TAG | cut -c 2-)
  script:
    - export "VERSION=$(echo $CI_COMMIT_TAG | cut -c 2-)"
    - echo $VERSION
  needs:
    - job: test
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/
      when: always
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Created using the release-cli'
    tag_name: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'Documentation'
          url: 'https://blocksim.readthedocs.io/en/$CI_COMMIT_TAG'
        - name: 'Code coverage'
          url: 'https://app.codecov.io/gl/manawenuz/blocksim/branch/$CI_COMMIT_TAG'
        - name: 'Python package'
          url: 'https://pypi.org/project/blocksim/$VERSION'

pages:
  stage: deploy
  dependencies:
  - test
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/
      when: always
  script:
    - mkdir public
    - cp -r htmlcov htmldoc public
  artifacts:
    paths:
      - public

