[build-system]
requires = ["pdm-backend~=2.0.6"]
build-backend = "pdm.backend"

[project]
name = "blocksim"
dynamic = ["version"]
description = "A library to simulate a closed-loop system"
authors = [
    { name = "Yann de ThÃ©", email = "yann@johncloud.fr" },
]
dependencies = [
    "rich>=13.3",
    "setuptools-scm>=7.1",
    "ahrs~=0.3.0",
    "cartopy~=0.21.0",
    "control~=0.9.0",
    "fortranformat~=1.2.2",
    "geopandas~=0.11.0",
    "lazy-property~=0.0.1",
    "matplotlib~=3.5.0",
    "munch~=2.5.0",
    "networkx~=2.8",
    "numpy>=1.22.0",
    "openpyxl~=3.0.0",
    "panda3d==1.10.13",
    "pandas~=1.4.0",
    "parse~=1.19.0",
    "plotly~=5.11.0",
    "pluggy~=1.0.0",
    "pyarrow~=8.0.0",
    "pyqt5~=5.15.7",
    "PyQtWebEngine~=5.15.6",
    "pyyaml~=6.0",
    "requests~=2.28.1",
    "scikit-commpy~=0.6.0",
    "scipy~=1.9.1",
    "sgp4==2.20",
    "singleton3~=1.0",
    "skyfield~=1.45",
    "typer~=0.6.1",
    "pydantic~=1.10",
]
requires-python = ">=3.8"

[project.urls]
"Bug Tracker" = "https://gitlab.com/ydethe/blocksim/issues"
Homepage = "https://gitlab.com/ydethe/blocksim"
Source = "https://gitlab.com/ydethe/blocksim"

[tool.pylint.main]
ignore-patterns = ["kt_*.py"]

[tool.pylint.format]
max-line-length = 100

[tool.black]
line-length = 100
force-exclude = 'kt_.*.py'

[project.scripts]
blocksim = "blocksim.__main__:main"

[project.entry-points.blocksim]
logger_csv = "blocksim.loggers.CSVLogger"
logger_pkl = "blocksim.loggers.PickleLogger"
logger_xls = "blocksim.loggers.XlsLogger"

[tool.ruff]
line-length = 100

[tool.ruff.per-file-ignores]
"GNSScodegen.py" = ["E501"]

[tool.tox]
legacy_tox_ini = """
    [tox]
    env_list = py{38,39,310}
    isolated_build = true

    [testenv]
    groups = dev
    commands =
        pdm run pytest
"""

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--html=htmldoc/tests/report.html",
    "--self-contained-html",
    "--junitxml=htmldoc/junit.xml",
    "--cov-config=tests/coverage.conf",
    "--cov=blocksim",
    "--doctest-modules",
    "--mpl",
    "--mpl-generate-summary=html",
    "--mpl-results-always",
    "--mpl-baseline-path=tests/baseline",
    "--mpl-results-path=htmldoc/tests/results",
]
testpaths = [
    "tests/",
]

[tool.pdm.version]
source = "scm"

[tool.pdm.build]
includes = [
    "blocksim/",
]
excludes = [
    "tests",
    "examples",
    "build",
    "dev",
    "dist",
    "mockup",
    "ksy"
]
editable-backend = "editables"

[tool.pdm.dev-dependencies]
dev = [
    "coverage-badge>=1.1.0",
    "docstr-coverage>=2.2.0",
    "ipython~=7.23.1",
    "pre-commit",
    "snakeviz>=2.1.2",
]
maintain = [
    "black[jupyter]==22.3.0",
    "blacken-docs==1.12.1",
    "git-changelog>=1.0",
]
quality = [
    "mypy>=1.2.0",
    "ruff>=0.0.246",
]
doc = [
    "nbconvert~=7.0.0",
    "pdoc3~=0.10.0",
    "jupyter~=1.0.0",
    "pylint~=2.15.3",
    "ipykernel",
]
test = [
    "pytest~=7.1.3",
    "pytest-cov~=3.0.0",
    "pytest-mock~=3.8.2",
    "pytest-instafail~=0.4.2",
    "pytest-picked~=0.4.6",
    "pytest-sugar~=0.9.5",
    "pytest-html~=3.1.1",
    "pytest-mpl~=0.16.1",
    "pytest-xdist[psutil]~=3.2",
    "tox-pdm>=0.6.1,<1.0.0",
]

[tool.pdm.scripts]
site_packages = true
doc.shell = """\
    mkdir -p htmldoc/blocksim
    mkdir -p htmldoc/examples
    python -m ipykernel install --user
    python examples/__init__.py
    cp examples/quadcopter.png htmldoc/examples
    pdoc --html --force --config latex_math=True -o htmldoc blocksim examples
    pyreverse -s0 blocksim -k --colorized -p blocksim -m no --ignore=exceptions.py,LogFormatter.py,CSVLogger.py,PickleLogger.py,XlsLogger.py -d htmldoc
    dot -Tpng htmldoc/classes_blocksim.dot -o htmldoc/blocksim/classes.png
    coverage html -d htmldoc/coverage --rcfile tests/coverage.conf
    docstr-coverage blocksim -miP -sp -is -idel --skip-file-doc --exclude ".*/kt.*.py" --badge=htmldoc/blocksim/doc_badge.svg
    coverage-badge -f -o htmldoc/blocksim/cov_badge.svg
"""
baseline.shell = "pytest --mpl-generate-path=tests/baseline tests"
