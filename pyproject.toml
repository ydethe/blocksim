[build-system]
requires = ["hatchling>=1.8.1", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "blocksim"
dynamic = ["version"]
description = "A library to simulate a closed-loop system"
readme = "README.md"
license = ""
requires-python = ">= 3.9"
authors = [{ name = "Yann BLAUDIN DE THE", email = "yann@johncloud.fr" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "ahrs~=0.3.0",
    "altair_viewer~=0.4.0",
    "altair~=4.2.0",
    "cartopy==0.18.0",
    "control~=0.9.0",
    "geopandas~=0.11.0",
    "lazy_property~=0.0.1",
    "matplotlib~=3.5.0",
    "munch~=2.5.0",
    "networkx~=2.8",
    "nptyping~=2.0.1",
    "numpy>=1.22.0",
    "openpyxl~=3.0.0",
    "panda3d~=1.10.0",
    "pandas~=1.4.0",
    "parse~=1.19.0",
    "pluggy~=1.0.0",
    "pyarrow~=8.0.0",
    "pyqt5~=5.15.0",
    "pytest~=7.1.0",
    "pyyaml~=6.0",
    "requests~=2.27.0",
    "rich~=12.5.0",
    "scikit-commpy~=0.6.0",
    "scipy~=1.8.0",
    "setuptools",
    "sgp4==2.20",
    "singleton3~=1.0",
    "skyfield==1.39",
    "typer~=0.4.0",
]

[project.scripts]
gnss_sim = "blocksim.tools.gnss_sim:main"

[project.entry-points.blocksim]
logger_csv = "blocksim.loggers.CSVLogger"
logger_parq = "blocksim.loggers.ParquetLogger"
logger_pkl = "blocksim.loggers.PickleLogger"
logger_xls = "blocksim.loggers.XlsLogger"

[project.urls]
"Bug Tracker" = "https://gitlab.com/ydethe/blocksim/-/issues"
Homepage = "https://gitlab.com/ydethe/blocksim"
Source = "https://gitlab.com/ydethe/blocksim"

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "blocksim/version.py"

[tool.hatch.build.targets.sdist]
include = ["/blocksim"]

[tool.hatch.envs.test]
dependencies = [
    "pytest==7.1.2",
    "pytest-cov==3.0.0",
    "pytest-mpl==0.14.0",
    "pytest_xdist==2.5.0",
    "pytest-mock==3.8.2",
    "pytest-instafail==0.4.2",
    "pytest-picked==0.4.6",
    "pytest-sugar==0.9.5",
    "pytest-html==3.1.1",
]
[tool.hatch.envs.test.scripts]
run = [
    'pip install "numpy==1.23.1"',
    "pip install -e .",
    "python3 -m pytest --html=build/htmldoc/tests/report.html --self-contained-html --mpl --mpl-generate-summary=html --mpl-results-always --mpl-baseline-path=tests/baseline --mpl-results-path=build/htmldoc/tests/results --cov blocksim tests --doctest-modules blocksim",
    "coverage html -d build/htmldoc/coverage",
]

[tool.hatch.envs.doc]
dependencies = [
    "nbconvert==6.5.0",
    "pdoc3==0.10.0",
    "jupyter==1.0.0",
    "pylint==2.14.5",
    "ipykernel",
]

[tool.hatch.envs.doc.scripts]
build = [
    'pip install "numpy==1.23.1"',
    "pip install -e .",
    "python3 -m ipykernel install --user",
    "python3 examples/__init__.py",
    "cp examples/quadcopter.png build/htmldoc/examples",
    "pdoc --html --force --config latex_math=True -o build/htmldoc blocksim examples",
    "pyreverse -s0 blocksim -k --colorized -p blocksim -m no --ignore=exceptions.py,LogFormatter.py,CSVLogger.py,PickleLogger.py,XlsLogger.py -d build/htmldoc",
    "dot -Tpng build/htmldoc/classes_blocksim.dot -o build/htmldoc/blocksim/classes.png",
]
