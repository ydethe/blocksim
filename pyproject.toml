[project]
name = "blocksim"
dynamic = ["version"]
description = "A library to simulate a closed-loop system"
authors = [
    { name = "Yann BLAUDIN DE THE", email = "yann.blaudin-de-the@thalesaleniaspace.com" },
]
dependencies = [
    "ahrs~=0.3.0",
    "cartopy<0.20.0",
    "control~=0.9.0",
    "geopandas~=0.11.0",
    "lazy-property~=0.0.1",
    "matplotlib~=3.5.0",
    "munch~=2.5.0",
    "networkx~=2.8",
    "nptyping~=2.0.1",
    "numpy>=1.22.0",
    "openpyxl~=3.0.0",
    "panda3d~=1.10.0",
    "pandas~=1.4.0",
    "parse~=1.19.0",
    "pluggy~=1.0.0",
    "pyarrow~=8.0.0",
    "pyqt5~=5.15.0",
    "pyyaml~=6.0",
    "requests~=2.28.1",
    "rich~=12.5.1",
    "scikit-commpy~=0.6.0",
    "scipy~=1.9.1",
    "sgp4==2.20",
    "singleton3~=1.0",
    "skyfield~=1.45",
    "typer~=0.6.1",
]
requires-python = ">=3.8,<3.12"

[project.urls]
"Bug Tracker" = "https://git:8443/projects/DNFSND/repos/blocksim/browse/issues"
Homepage = "https://git:8443/projects/DNFSND/repos/blocksim/browse"
Source = "https://git:8443/projects/DNFSND/repos/blocksim/browse"

[tool.pylint.main]
ignore-patterns = ["kt_*.py"]

[tool.pylint.format]
max-line-length = 100

[tool.black]
line-length = 100
target-version = ['py38']
force-exclude = 'kt_.*.py'

[project.scripts]
blocksim = "blocksim.__main__:main"

[project.entry-points.blocksim]
logger_csv = "blocksim.loggers.CSVLogger"
logger_pkl = "blocksim.loggers.PickleLogger"
logger_xls = "blocksim.loggers.XlsLogger"
logger_parq = "blocksim.loggers.ParquetLogger"

[project.optional-dependencies]
[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool.pdm.version]
source = "scm"

[tool.pdm.build]
includes = [
    "blocksim/",
]
excludes = [
    "tests",
    "examples",
    "build",
    "dev",
    "dist",
    "mockup"
]

[tool.pdm.dev-dependencies]
dev = [
    "ipython~=7.23.1",
    "black[jupyter]==22.3.0",
]
doc = [
    "nbconvert~=7.0.0",
    "pdoc3~=0.10.0",
    "jupyter~=1.0.0",
    "pylint~=2.15.3",
    "ipykernel",
    "nbconvert~=7.0.0",
]
test = [
    "pytest~=7.1.3",
    "pytest-cov~=3.0.0",
    "pytest-mpl~=0.16.1",
    "pytest-xdist~=2.5.0",
    "pytest-mock~=3.8.2",
    "pytest-instafail~=0.4.2",
    "pytest-picked~=0.4.6",
    "pytest-sugar~=0.9.5",
    "pytest-html~=3.1.1",
]

[tool.pdm.scripts]
site_packages = true
test.shell = """\
    mkdir -p build/htmldoc/tests
    pytest --html=build/htmldoc/tests/report.html --self-contained-html --mpl --mpl-generate-summary=html --mpl-results-always --mpl-baseline-path=tests/baseline --mpl-results-path=build/htmldoc/tests/results --junitxml=build/junit.xml --cov-config=.coveragerc --cov blocksim tests --doctest-modules blocksim
    coverage html -d build/htmldoc/coverage
"""
doc.shell = """\
    mkdir -p build/htmldoc/blocksim
    mkdir -p build/htmldoc/examples
    python -m ipykernel install --user
    python examples/__init__.py
    cp examples/quadcopter.png build/htmldoc/examples
    pdoc --html --force --config latex_math=True --template-dir docs/template -o build/htmldoc blocksim examples
    pyreverse -s0 blocksim -k --colorized -p blocksim -m no --ignore=exceptions.py,LogFormatter.py,CSVLogger.py,PickleLogger.py,XlsLogger.py -d build/htmldoc
    dot -Tpng build/htmldoc/classes_blocksim.dot -o build/htmldoc/blocksim/classes.png
"""
baseline.shell = "pytest --mpl-generate-path=tests/baseline tests"
